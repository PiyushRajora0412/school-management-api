{
  "info": {
    "name": "School Management API",
    "description": "Collection for testing School Management APIs - Add School and List Schools by proximity",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "health"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response has success field', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('success');",
              "    pm.expect(jsonData.success).to.be.true;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Add School - Success",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Green Valley High School\",\n  \"address\": \"123 Education Street, Green Valley, CA 91390\",\n  \"latitude\": 34.4208,\n  \"longitude\": -118.5739\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/addSchool",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "addSchool"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test('Response has correct structure', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('success');",
              "    pm.expect(jsonData).to.have.property('message');",
              "    pm.expect(jsonData).to.have.property('data');",
              "    pm.expect(jsonData.success).to.be.true;",
              "});",
              "",
              "pm.test('School data is returned', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.have.property('id');",
              "    pm.expect(jsonData.data).to.have.property('name');",
              "    pm.expect(jsonData.data).to.have.property('address');",
              "    pm.expect(jsonData.data).to.have.property('latitude');",
              "    pm.expect(jsonData.data).to.have.property('longitude');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Add School - Validation Error",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"\",\n  \"address\": \"123\",\n  \"latitude\": 91,\n  \"longitude\": -181\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/addSchool",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "addSchool"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 400', function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test('Response has validation errors', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('success');",
              "    pm.expect(jsonData.success).to.be.false;",
              "    pm.expect(jsonData).to.have.property('errors');",
              "    pm.expect(jsonData.errors).to.be.an('array');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Add Multiple Schools",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Sunshine Elementary School\",\n  \"address\": \"456 Sunshine Boulevard, Los Angeles, CA 90210\",\n  \"latitude\": 34.0522,\n  \"longitude\": -118.2437\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/addSchool",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "addSchool"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add School - Mountain View",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Mountain View Academy\",\n  \"address\": \"789 Tech Drive, Mountain View, CA 94041\",\n  \"latitude\": 37.3861,\n  \"longitude\": -122.0839\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/addSchool",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "addSchool"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Add School - San Francisco",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Golden Gate High School\",\n  \"address\": \"321 Golden Gate Avenue, San Francisco, CA 94102\",\n  \"latitude\": 37.7749,\n  \"longitude\": -122.4194\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/addSchool",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "addSchool"
          ]
        }
      },
      "response": []
    },
    {
      "name": "List Schools - Success",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/listSchools?latitude=34.0522&longitude=-118.2437",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "listSchools"
          ],
          "query": [
            {
              "key": "latitude",
              "value": "34.0522",
              "description": "User's latitude (Los Angeles)"
            },
            {
              "key": "longitude",
              "value": "-118.2437",
              "description": "User's longitude (Los Angeles)"
            }
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response has correct structure', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('success');",
              "    pm.expect(jsonData).to.have.property('message');",
              "    pm.expect(jsonData).to.have.property('data');",
              "    pm.expect(jsonData.success).to.be.true;",
              "});",
              "",
              "pm.test('Schools are returned as array', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.data).to.be.an('array');",
              "});",
              "",
              "pm.test('Schools have distance property', function () {",
              "    var jsonData = pm.response.json();",
              "    if (jsonData.data.length > 0) {",
              "        pm.expect(jsonData.data[0]).to.have.property('distance');",
              "        pm.expect(jsonData.data[0].distance).to.be.a('number');",
              "    }",
              "});",
              "",
              "pm.test('Schools are sorted by distance', function () {",
              "    var jsonData = pm.response.json();",
              "    if (jsonData.data.length > 1) {",
              "        for (let i = 0; i < jsonData.data.length - 1; i++) {",
              "            pm.expect(jsonData.data[i].distance).to.be.at.most(jsonData.data[i + 1].distance);",
              "        }",
              "    }",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "List Schools - Different Location",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/listSchools?latitude=37.7749&longitude=-122.4194",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "listSchools"
          ],
          "query": [
            {
              "key": "latitude",
              "value": "37.7749",
              "description": "User's latitude (San Francisco)"
            },
            {
              "key": "longitude",
              "value": "-122.4194",
              "description": "User's longitude (San Francisco)"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "List Schools - Validation Error",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/listSchools?latitude=91&longitude=-181",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "listSchools"
          ],
          "query": [
            {
              "key": "latitude",
              "value": "91",
              "description": "Invalid latitude (> 90)"
            },
            {
              "key": "longitude",
              "value": "-181",
              "description": "Invalid longitude (< -180)"
            }
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 400', function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test('Response has validation errors', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('success');",
              "    pm.expect(jsonData.success).to.be.false;",
              "    pm.expect(jsonData).to.have.property('errors');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "List Schools - Missing Parameters",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/listSchools",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "listSchools"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 400', function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test('Response indicates missing parameters', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('success');",
              "    pm.expect(jsonData.success).to.be.false;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "404 - Invalid Endpoint",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/invalid-endpoint",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "invalid-endpoint"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 404', function () {",
              "    pm.response.to.have.status(404);",
              "});",
              "",
              "pm.test('Response shows available endpoints', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('success');",
              "    pm.expect(jsonData.success).to.be.false;",
              "    pm.expect(jsonData).to.have.property('availableEndpoints');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    }
  ]
}